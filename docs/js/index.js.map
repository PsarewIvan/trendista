{"version":3,"sources":["accordion.js","anchor-scroll.js","auth.js","pass-input.js","text-input.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["class ItcAccordion {\n    constructor(target, config) {\n        this._el =\n            typeof target === 'string'\n                ? document.querySelector(target)\n                : target;\n        const defaultConfig = {\n            alwaysOpen: true,\n            duration: 350,\n        };\n        this._config = Object.assign(defaultConfig, config);\n        this.addEventListener();\n    }\n\n    addEventListener() {\n        this._el.addEventListener('click', (e) => {\n            const elHeader = e.target.closest('.js-accordion-header');\n\n            if (!elHeader) {\n                return;\n            }\n            if (!this._config.alwaysOpen) {\n                const elOpenItem = this._el.querySelector(\n                    '.accordion__item_show'\n                );\n                if (elOpenItem) {\n                    elOpenItem !== elHeader.parentElement\n                        ? this.toggle(elOpenItem)\n                        : null;\n                }\n            }\n            this.toggle(elHeader.parentElement);\n        });\n    }\n\n    show(el) {\n        const elBody = el.querySelector('.accordion__body');\n        if (\n            elBody.classList.contains('collapsing') ||\n            el.classList.contains('accordion__item_show')\n        ) {\n            return;\n        }\n        elBody.style['display'] = 'block';\n        const height = elBody.offsetHeight;\n        elBody.style['height'] = 0;\n        elBody.style['overflow'] = 'hidden';\n        elBody.style['transition'] = `height ${this._config.duration}ms ease`;\n        elBody.classList.add('collapsing');\n        el.classList.add('accordion__item_slidedown');\n        elBody.offsetHeight;\n        elBody.style['height'] = `${height}px`;\n        window.setTimeout(() => {\n            elBody.classList.remove('collapsing');\n            el.classList.remove('accordion__item_slidedown');\n            elBody.classList.add('collapse');\n            el.classList.add('accordion__item_show');\n            elBody.style['display'] = '';\n            elBody.style['height'] = '';\n            elBody.style['transition'] = '';\n            elBody.style['overflow'] = '';\n        }, this._config.duration);\n    }\n\n    hide(el) {\n        const elBody = el.querySelector('.accordion__body');\n        if (\n            elBody.classList.contains('collapsing') ||\n            !el.classList.contains('accordion__item_show')\n        ) {\n            return;\n        }\n        elBody.style['height'] = `${elBody.offsetHeight}px`;\n        elBody.offsetHeight;\n        elBody.style['display'] = 'block';\n        elBody.style['height'] = 0;\n        elBody.style['overflow'] = 'hidden';\n        elBody.style['transition'] = `height ${this._config.duration}ms ease`;\n        elBody.classList.remove('collapse');\n        el.classList.remove('accordion__item_show');\n        elBody.classList.add('collapsing');\n        window.setTimeout(() => {\n            elBody.classList.remove('collapsing');\n            elBody.classList.add('collapse');\n            elBody.style['display'] = '';\n            elBody.style['height'] = '';\n            elBody.style['transition'] = '';\n            elBody.style['overflow'] = '';\n        }, this._config.duration);\n    }\n\n    toggle(el) {\n        el.classList.contains('accordion__item_show')\n            ? this.hide(el)\n            : this.show(el);\n    }\n}\n\n(() => {\n    const accordions = document.querySelectorAll('.js-accordion');\n\n    accordions.forEach((accordion) => {\n        new ItcAccordion(accordion, {\n            alwaysOpen: true,\n        });\n    });\n})();\n","(() => {\n    document.addEventListener('DOMContentLoaded', function () {\n        const offset = 20;\n\n        document.querySelectorAll('a[href^=\"#\"]').forEach((anchor) => {\n            anchor.addEventListener('click', function (e) {\n                e.preventDefault();\n\n                const target = document.querySelector(\n                    this.getAttribute('href')\n                );\n                const targetPosition =\n                    target.getBoundingClientRect().top +\n                    window.scrollY -\n                    offset;\n\n                window.scrollTo({\n                    top: targetPosition,\n                    behavior: 'smooth',\n                });\n            });\n        });\n    });\n})();\n","(() => {\n    const authButtons = document.querySelectorAll('.js-auth-button');\n\n    const popup = document.querySelector('.js-popup-auth');\n    // const popupForgotPass = document.querySelector('.js-popup-forgot-pass');\n    // const popupLogin = document.querySelector('.js-popup-login');\n    // const popupSuccess = document.querySelector('.js-popup-success');\n\n    const closePopupButtons = document.querySelectorAll('.js-close-popup');\n    // const forgotPassButtons = document.querySelectorAll(\n    //     '.js-auth-button-forgot'\n    // );\n    // const loginButtons = document.querySelectorAll('.js-login-button');\n    // const successButtons = document.querySelectorAll('.js-success-button');\n\n    closePopupButtons.forEach((button) => {\n        button?.addEventListener('click', closeAllPopup);\n    });\n\n    authButtons.forEach((button) => {\n        button?.addEventListener('click', openPopup(popup));\n    });\n\n    // forgotPassButtons.forEach((button) => {\n    //     button?.addEventListener('click', () => {\n    //         closeAllPopup();\n    //         // openPopup(popupForgotPass)();\n    //     });\n    // });\n\n    // loginButtons.forEach((button) => {\n    //     button?.addEventListener('click', () => {\n    //         closeAllPopup();\n    //         // openPopup(popupLogin)();\n    //     });\n    // });\n\n    // successButtons.forEach((button) => {\n    //     button?.addEventListener('click', () => {\n    //         closeAllPopup();\n    //         // openPopup(popupSuccess)();\n    //     });\n    // });\n\n    popup?.addEventListener('click', overlayClose(popup));\n    // popupForgotPass?.addEventListener('click', overlayClose(popupForgotPass));\n    // popupLogin?.addEventListener('click', overlayClose(popupLogin));\n    // popupSuccess?.addEventListener('click', overlayClose(popupSuccess));\n\n    function closeAllPopup() {\n        closePopup(popup)();\n        // closePopup(popupForgotPass)();\n        // closePopup(popupLogin)();\n        // closePopup(popupSuccess)();\n    }\n\n    function overlayClose(element) {\n        return (evt) => {\n            if (evt.target === element) {\n                closePopup(element)();\n            }\n        };\n    }\n\n    function openPopup(element) {\n        return () => {\n            element?.classList.remove('hidden');\n            element?.focus();\n            document.body.classList.add('body-lock');\n            trapFocus(element);\n        };\n    }\n\n    function closePopup(element) {\n        return () => {\n            element?.classList.add('hidden');\n            document.body.classList.remove('body-lock');\n        };\n    }\n\n    function trapFocus(element) {\n        const focusableElements = element?.querySelectorAll(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        );\n\n        if (element && focusableElements) {\n            const firstFocusableElement = focusableElements[0];\n            const lastFocusableElement =\n                focusableElements[focusableElements.length - 1];\n\n            element.addEventListener('keydown', function (e) {\n                const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n\n                if (!isTabPressed) {\n                    return;\n                }\n\n                if (e.shiftKey) {\n                    if (document.activeElement === firstFocusableElement) {\n                        lastFocusableElement.focus();\n                        e.preventDefault();\n                    }\n                } else {\n                    if (document.activeElement === lastFocusableElement) {\n                        firstFocusableElement.focus();\n                        e.preventDefault();\n                    }\n                }\n            });\n        }\n    }\n})();\n","(() => {\n    const nodes = document.querySelectorAll('.js-pass-input-node');\n\n    nodes.forEach((node) => {\n        const input = node.querySelector('.js-pass-input');\n        const show = node.querySelector('.js-pass-input-show');\n        const openIcon = node.querySelector('.js-pass-input-icon-open');\n        const closedIcon = node.querySelector('.js-pass-input-icon-closed');\n\n        show?.addEventListener('click', () => {\n            const type = input?.getAttribute('type');\n\n            if (type === 'password') {\n                input.setAttribute('type', 'text');\n                openIcon?.classList.remove('hidden');\n                closedIcon?.classList.add('hidden');\n            } else {\n                input.setAttribute('type', 'password');\n                openIcon?.classList.add('hidden');\n                closedIcon?.classList.remove('hidden');\n            }\n        });\n    });\n})();\n","(() => {\n    const ACTIVE_CLASS = 'active';\n\n    const nodes = document.querySelectorAll('.js-text-input-node');\n\n    nodes.forEach((node) => {\n        const input = node.querySelector('.js-text-input');\n        const reset = node.querySelector('.js-text-input-reset');\n        const alert = node.querySelector('.js-text-input-alert');\n\n        if (input.value !== '') {\n            reset?.classList.add(ACTIVE_CLASS);\n        }\n\n        input?.addEventListener('blur', (event) => {\n            if (event.target.value === '') {\n                alert?.classList.add(ACTIVE_CLASS);\n            } else {\n                alert?.classList.remove(ACTIVE_CLASS);\n            }\n        });\n\n        input?.addEventListener('input', (event) => {\n            if (event.target.value === '') {\n                reset?.classList.remove(ACTIVE_CLASS);\n            } else {\n                reset?.classList.add(ACTIVE_CLASS);\n                alert?.classList.remove(ACTIVE_CLASS);\n            }\n        });\n\n        reset?.addEventListener('click', () => {\n            if (input) {\n                input.value = '';\n                reset?.classList.remove(ACTIVE_CLASS);\n            }\n        });\n    });\n})();\n"]}